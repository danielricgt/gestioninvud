{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend/gestion_inventarios_frontend-develop/src/pages/Notifications/notifications.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport { activateAuthLayout } from '../../store/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Settingmenu from '../Subpages/Settingmenu';\n\nclass Notifications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.activateAuthLayout();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"page-title-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }\n      }, \"Alerts\"),\n      /*#__PURE__*/\n      React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(BreadcrumbItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Link, {\n        to: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 53\n        }\n      }, \"UD\")),\n      /*#__PURE__*/\n      React.createElement(BreadcrumbItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Link, {\n        to: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 53\n        }\n      }, \"UI Elements\")),\n      /*#__PURE__*/\n      React.createElement(BreadcrumbItem, {\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }\n      }, \"Alerts\"))),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"float-right d-none d-md-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Settingmenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }\n      }))))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"mt-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }\n      }, \"Examples\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"text-muted m-b-30 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }\n      }, \"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the for \",\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 56\n        }\n      }, \"Color\"), \" (e.g., \",\n      /*#__PURE__*/\n      React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 86\n        }\n      }, \"success\"), \"). For inline dismissal, use the alerts.\"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }\n      }, \"Well done!\"), \" You successfully read this important alert message. \"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }\n      }, \"Heads up!\"), \" This alert needs your attention, but it's not super important.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }\n      }, \"Warning!\"), \" Better check yourself, you're not looking too good.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"danger mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 45\n        }\n      }, \"Oh snap!\"), \" Change a few things up and try submitting again.\"))))),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"mt-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }\n      }, \"Link color\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"text-muted m-b-30 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, \"Use the \",\n      /*#__PURE__*/\n      React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 79\n        }\n      }, \"Link\"), \" utility className to quickly provide matching colored links within any alert.\"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 45\n        }\n      }, \"Well done!\"), \" You successfully read \",\n      /*#__PURE__*/\n      React.createElement(Link, {\n        to: \"#\",\n        className: \"alert-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 95\n        }\n      }, \"this important alert message\"), \".\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }\n      }, \"Heads up!\"), \" This \",\n      /*#__PURE__*/\n      React.createElement(Link, {\n        to: \"#\",\n        className: \"alert-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 77\n        }\n      }, \"alert needs your attention\"), \", but it's not super important.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }\n      }, \"Warning!\"), \" Better check yourself, you're \",\n      /*#__PURE__*/\n      React.createElement(Link, {\n        to: \"#\",\n        className: \"alert-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 101\n        }\n      }, \"not looking too good\"), \".\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"danger mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 45\n        }\n      }, \"Oh snap!\"), \" \",\n      /*#__PURE__*/\n      React.createElement(Link, {\n        to: \"#\",\n        className: \"alert-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 71\n        }\n      }, \"Change a few things up\"), \" and try submitting again.\")))))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"mt-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, \"Dismissing\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"text-muted m-b-30 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      }, \"You can see this in action with a live demo:\"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"success\",\n        isOpen: this.state.alert1,\n        toggle: () => this.setState({\n          alert1: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 45\n        }\n      }, \"Well done!\"), \" You successfully read this important alert message.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"info\",\n        isOpen: this.state.alert2,\n        toggle: () => this.setState({\n          alert2: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 45\n        }\n      }, \"Heads up!\"), \" This alert needs your attention, but it's not super important.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"warning\",\n        isOpen: this.state.alert3,\n        toggle: () => this.setState({\n          alert3: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }, \"Warning!\"), \" Better check yourself, you're not looking too good.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"danger\",\n        className: \"mb-0\",\n        isOpen: this.state.alert4,\n        toggle: () => this.setState({\n          alert4: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      }, \"Oh snap!\"), \" Change a few things up and try submitting again.\"))))),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"mt-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, \"Additional content\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"text-muted m-b-30 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }\n      }, \"Alerts can also contain additional HTML elements like headings and paragraphs.\"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"success\",\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"alert-heading font-18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }\n      }, \"Well done!\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 45\n        }\n      }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 45\n        }\n      }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))))))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"mt-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 37\n        }\n      }, \"Examples\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"text-muted m-b-30 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }, \"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the four \",\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 57\n        }\n      }, \"color\"), \" (e.g., \",\n      /*#__PURE__*/\n      React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 87\n        }\n      }, \"warning\"), \" also we can pass class as \",\n      /*#__PURE__*/\n      React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 116\n        }\n      }, \"bg-success\"), \" ). For inline dismissal, use the alerts.\"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"success\",\n        className: \"bg-success text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 45\n        }\n      }, \"Well done!\"), \" You successfully read this important alert message.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"info\",\n        className: \"bg-info text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 45\n        }\n      }, \"Heads up!\"), \" This alert needs your attention, but it's not super important.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"warning\",\n        className: \"bg-warning text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 45\n        }\n      }, \"Warning!\"), \" Better check yourself, you're not looking too good.\"),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"danger\",\n        className: \"bg-danger text-white mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 45\n        }\n      }, \"Oh snap!\"), \" Change a few things up and try submitting again.\"))))))))\n    );\n  }\n\n}\n\nexport default withRouter(connect(null, {\n  activateAuthLayout\n})(Notifications));","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend/gestion_inventarios_frontend-develop/src/pages/Notifications/notifications.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","Breadcrumb","BreadcrumbItem","Alert","activateAuthLayout","Link","withRouter","connect","Settingmenu","Notifications","constructor","props","state","componentDidMount","render","alert1","setState","alert2","alert3","alert4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport { activateAuthLayout } from '../../store/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Settingmenu from '../Subpages/Settingmenu';\n\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    componentDidMount() {\n        this.props.activateAuthLayout();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container fluid>\n                    <div className=\"page-title-box\">\n                        <Row className=\"align-items-center\">\n                            <Col sm=\"6\">\n                                <h4 className=\"page-title\">Alerts</h4>\n                                <Breadcrumb>\n                                    <BreadcrumbItem><Link to=\"#\">UD</Link></BreadcrumbItem>\n                                    <BreadcrumbItem><Link to=\"#\">UI Elements</Link></BreadcrumbItem>\n                                    <BreadcrumbItem active>Alerts</BreadcrumbItem>\n                                </Breadcrumb>\n                            </Col>\n                            <Col sm=\"6\">\n                                <div className=\"float-right d-none d-md-block\">\n                                    <Settingmenu />\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n\n                    <Row>\n                        <Col lg=\"6\">\n                            <Card>\n                                <CardBody>\n                                    <h4 className=\"mt-0 header-title\">Examples</h4>\n                                    <p className=\"text-muted m-b-30 \">Alerts are available for any length of\n                                        text, as well as an optional dismiss button. For proper styling, use one\n                                            of the for <strong>Color</strong> (e.g., <code\n                                            className=\"highlighter-rouge\">success</code>). For inline\n                                            dismissal, use the alerts.</p>\n                                    <div className=\"\">\n                                        <Alert color=\"success\">\n                                            <strong>Well done!</strong> You successfully read this important alert message. </Alert>\n                                        <Alert color=\"info\">\n                                            <strong>Heads up!</strong> This alert needs your attention, but it's not super important.</Alert>\n                                        <Alert color=\"warning\">\n                                            <strong>Warning!</strong> Better check yourself, you're not looking too good.</Alert>\n                                        <Alert color=\"danger mb-0\">\n                                            <strong>Oh snap!</strong> Change a few things up and try submitting again.</Alert>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n\n                        <Col lg=\"6\">\n                            <Card>\n                                <CardBody>\n                                    <h4 className=\"mt-0 header-title\">Link color</h4>\n                                    <p className=\"text-muted m-b-30 \">Use the <code\n                                        className=\"highlighter-rouge\">Link</code> utility className to\n                                            quickly provide matching colored links within any alert.</p>\n                                    <div className=\"\">\n                                        <Alert color=\"success\">\n                                            <strong>Well done!</strong> You successfully read <Link to=\"#\" className=\"alert-link\">this important alert message</Link>.\n                                            </Alert>\n                                        <Alert color=\"info\">\n                                            <strong>Heads up!</strong> This <Link to=\"#\" className=\"alert-link\">alert needs your attention</Link>, but it's not super important.\n                                            </Alert>\n                                        <Alert color=\"warning\">\n                                            <strong>Warning!</strong> Better check yourself, you're <Link to=\"#\" className=\"alert-link\">not looking too good</Link>.\n                                            </Alert>\n                                        <Alert color=\"danger mb-0\">\n                                            <strong>Oh snap!</strong> <Link to=\"#\" className=\"alert-link\">Change a few things up</Link> and try submitting again.\n                                            </Alert>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n\n\n                    <Row>\n                        <Col lg=\"6\">\n                            <Card>\n                                <CardBody>\n                                    <h4 className=\"mt-0 header-title\">Dismissing</h4>\n                                    <p className=\"text-muted m-b-30 \">You can see this in action with a live demo:</p>\n\n                                    <div className=\"\">\n                                        <Alert color=\"success\" isOpen={this.state.alert1} toggle={() => this.setState({ alert1: false })}>\n                                            <strong>Well done!</strong> You successfully read this important alert message.\n                                        </Alert>\n                                        <Alert color=\"info\" isOpen={this.state.alert2} toggle={() => this.setState({ alert2: false })}>\n                                            <strong>Heads up!</strong> This alert needs your attention, but it's not super important.\n                                        </Alert>\n                                        <Alert color=\"warning\" isOpen={this.state.alert3} toggle={() => this.setState({ alert3: false })}>\n                                            <strong>Warning!</strong> Better check yourself, you're not looking too good.\n                                        </Alert>\n                                        <Alert color=\"danger\" className=\"mb-0\" isOpen={this.state.alert4} toggle={() => this.setState({ alert4: false })}>\n                                            <strong>Oh snap!</strong> Change a few things up and try submitting again.\n                                        </Alert>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n\n                        <Col lg=\"6\">\n                            <Card>\n                                <CardBody>\n                                    <h4 className=\"mt-0 header-title\">Additional content</h4>\n                                    <p className=\"text-muted m-b-30 \">Alerts can also contain additional HTML elements like headings and paragraphs.</p>\n                                    <div className=\"\">\n                                        <Alert color=\"success\" className=\"mb-0\">\n                                            <h4 className=\"alert-heading font-18\">Well done!</h4>\n                                            <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\n                                            <p className=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\n                                        </Alert>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col lg=\"6\">\n                            <Card>\n                                <CardBody>\n                                    <h4 className=\"mt-0 header-title\">Examples</h4>\n                                    <p className=\"text-muted m-b-30 \">Alerts are available for any length of\n                                        text, as well as an optional dismiss button. For proper styling, use one\n                                            of the four <strong>color</strong> (e.g., <code\n                                            className=\"highlighter-rouge\">warning</code> also we can pass class as <code>bg-success</code> ). For inline\n                                            dismissal, use the alerts.</p>\n                                    <div className=\"\">\n                                        <Alert color=\"success\" className=\"bg-success text-white\">\n                                            <strong>Well done!</strong> You successfully read this important alert message.\n                                        </Alert>\n                                        <Alert color=\"info\" className=\"bg-info text-white\">\n                                            <strong>Heads up!</strong> This alert needs your attention, but it's not super important.\n                                        </Alert>\n                                        <Alert color=\"warning\" className=\"bg-warning text-white\">\n                                            <strong>Warning!</strong> Better check yourself, you're not looking too good.\n                                        </Alert>\n                                        <Alert color=\"danger\" className=\"bg-danger text-white mb-0\">\n                                            <strong>Oh snap!</strong> Change a few things up and try submitting again.\n                                        </Alert>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(connect(null, { activateAuthLayout })(Notifications));"]},"metadata":{},"sourceType":"module"}