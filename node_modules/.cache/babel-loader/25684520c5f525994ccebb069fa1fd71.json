{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend/gestion_inventarios_frontend-develop/src/pages/Tables/levantamiento.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { levantamientoColumns } from './columnsData';\nimport { update_bien } from './../../helpers/fetch';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport ModalUpdateBien from './../Modals/modalUpdateBien';\n\nclass LevantamientoTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeStateBien = async (data, idRol, bien) => {\n      if (idRol === 1) data.fk_estado = 7;\n      data.descripcion = bien.descripcion;\n      data.espacio_fisico = bien.espacio_fisico;\n      data.observaciones = bien.observaciones;\n\n      try {\n        await update_bien(data);\n        this.updateTable(data);\n        alert('Actualización exitosa');\n      } catch {\n        alert('Error en el servidor');\n      }\n    };\n\n    this.state = {\n      BienesData: props.Bienes,\n      Bienes: [],\n      confirm: false,\n      modal: false,\n      loading: false,\n      descripcion: '',\n      espacio_fisico: '',\n      observaciones: '',\n      idBien: '',\n      idEstado: ''\n    };\n    this.changeStateBien = this.changeStateBien.bind(this);\n    this.updateBien = this.updateBien.bind(this);\n    this.openModal = this.openModal.bind(this); // this.updateTable = this.updateTable.bind(this)\n  }\n\n  componentDidMount() {\n    const {\n      Bienes\n    } = this.props;\n    this.setState({\n      Bienes\n    });\n  }\n\n  async updateBien(dataForm) {\n    try {\n      await update_bien(dataForm);\n      await this.updateTable(dataForm);\n      alert('Actualización exitosa');\n    } catch {\n      alert('Error en el servidor');\n    }\n  }\n\n  openModal(data) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      data // modal: true\n\n    }));\n  }\n\n  render() {\n    // const { idRol, Bienes  } = this.props;\n    // const { BienesData } = this.state;\n    let columns = levantamientoColumns;\n    let rows = [{\n      name: 'Tiger Nixon',\n      position: 'System Architect',\n      office: 'Edinburgh',\n      age: '61',\n      date: '2011/04/25',\n      salary: '$320'\n    }, {\n      name: 'Garrett Winters',\n      position: 'Accountant',\n      office: 'Tokyo',\n      age: '63',\n      date: '2011/07/25',\n      salary: '$170'\n    }, {\n      name: 'Ashton Cox',\n      position: 'Junior Technical Author',\n      office: 'San Francisco',\n      age: '66',\n      date: '2009/01/12',\n      salary: '$86'\n    }, {\n      name: 'Cedric Kelly',\n      position: 'Senior Javascript Developer',\n      office: 'Edinburgh',\n      age: '22',\n      date: '2012/03/29',\n      salary: '$433'\n    }, {\n      name: 'Airi Satou',\n      position: 'Accountant',\n      office: 'Tokyo',\n      age: '33',\n      date: '2008/11/28',\n      salary: '$162'\n    }, {\n      name: 'Brielle Williamson',\n      position: 'Integration Specialist',\n      office: 'New York',\n      age: '61',\n      date: '2012/12/02',\n      salary: '$372'\n    }, {\n      name: 'Herrod Chandler',\n      position: 'Sales Assistant',\n      office: 'San Francisco',\n      age: '59',\n      date: '2012/08/06',\n      salary: '$137'\n    }, {\n      name: 'Rhona Davidson',\n      position: 'Integration Specialist',\n      office: 'Tokyo',\n      age: '55',\n      date: '2010/10/14',\n      salary: '$327'\n    }, {\n      name: 'Colleen Hurst',\n      position: 'Javascript Developer',\n      office: 'San Francisco',\n      age: '39',\n      date: '2009/09/15',\n      salary: '$205'\n    }, {\n      name: 'Sonya Frost',\n      position: 'Software Engineer',\n      office: 'Edinburgh',\n      age: '23',\n      date: '2008/12/13',\n      salary: '$103'\n    }]; // if (idRol === 4) {\n    //     columns = columns.slice(0, columns.length - 2)\n    // }   \n    // Bienes.forEach(data => {\n    //     if(data.usuario) {\n    //         rows.push({\n    //             placa: data.placa ? data.placa : '-',\n    //             descripcion: data.descripcion ? data.descripcion : '-',\n    //             sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n    //             espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n    //             dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n    //             observaciones: data.observaciones ? data.observaciones : 'Ninguna',\n    //             dar_baja: idRol === 4 ? '' :\n    //                 Number(data.estado.id) === 1 ?\n    //                     <button className=\"btn btn-danger rounded-pill\" onClick={() => this.changeStateBien({ id: Number(data.id), fk_estado: 2 }, idRol, data)}>Dar de baja</button>\n    //                 : Number(data.estado.id) === 2 ? <button className=\"btn btn-success rounded-pill\" onClick={() => this.changeStateBien({ id: Number(data.id), fk_estado: 1 }, idRol, data)}>Dar de alta</button>\n    //                         : <button className=\"btn btn-secondary rounded-pill\" disabled={true}>Pendiente</button>,\n    //             actualizar: idRol === 4 ? '' : <button className=\"btn btn-primary rounded-pill\" onClick={() => this.openModal(data)}>Actualizar</button>\n    //         })\n    //     }\n    // })\n\n    const data = {\n      columns,\n      rows\n    };\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 33\n        }\n      }, this.state.confirm ?\n      /*#__PURE__*/\n      React.createElement(SweetAlert, {\n        success: true,\n        title: \"\",\n        onConfirm: this.closeAlert(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 41\n        }\n      }, \"Actualizaci\\xF3n correcta\") :\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 53\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(MDBDataTableV5, {\n        responsive: true,\n        bordered: true,\n        searching: false,\n        fullPagination: true,\n        infoLabel: ['', '-', 'de', ''],\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 37\n        }\n      }))), this.state.modal ?\n      /*#__PURE__*/\n      React.createElement(ModalUpdateBien, {\n        callback: this.updateBien,\n        data: this.state.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 33\n        }\n      }) :\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 104\n        }\n      })))))\n    );\n  }\n\n}\n\nexport default LevantamientoTable;","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend/gestion_inventarios_frontend-develop/src/pages/Tables/levantamiento.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","MDBDataTableV5","levantamientoColumns","update_bien","SweetAlert","ModalUpdateBien","LevantamientoTable","constructor","props","changeStateBien","data","idRol","bien","fk_estado","descripcion","espacio_fisico","observaciones","updateTable","alert","state","BienesData","Bienes","confirm","modal","loading","idBien","idEstado","bind","updateBien","openModal","componentDidMount","setState","dataForm","prevState","render","columns","rows","name","position","office","age","date","salary","closeAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { levantamientoColumns } from './columnsData'\nimport { update_bien } from './../../helpers/fetch'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport ModalUpdateBien from './../Modals/modalUpdateBien'\n\nclass LevantamientoTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            BienesData: props.Bienes,\n            Bienes: [],\n\n            confirm: false,\n            modal: false,\n            loading: false,\n\n            descripcion: '',\n            espacio_fisico: '',\n            observaciones: '',\n            idBien: '',\n            idEstado: '',\n        }\n        this.changeStateBien = this.changeStateBien.bind(this)\n        this.updateBien = this.updateBien.bind(this)\n        this.openModal = this.openModal.bind(this)\n        // this.updateTable = this.updateTable.bind(this)\n    }\n\n    componentDidMount() {\n        const { Bienes } = this.props\n        this.setState({\n            Bienes\n        })\n    }\n\n    changeStateBien = async (data, idRol, bien) => {\n        if (idRol === 1) data.fk_estado = 7\n        data.descripcion = bien.descripcion\n        data.espacio_fisico = bien.espacio_fisico\n        data.observaciones = bien.observaciones\n\n        try {\n            await update_bien(data)\n            this.updateTable(data)\n            alert('Actualización exitosa')\n        } catch {\n            alert('Error en el servidor')\n        }\n    }\n\n    async updateBien(dataForm) {\n        \n        try {\n            await update_bien(dataForm)\n            await this.updateTable(dataForm)\n            alert('Actualización exitosa')\n        } catch {\n            alert('Error en el servidor')\n        }\n    }\n\n\n    openModal(data) {\n        this.setState(prevState => ({\n            modal: !prevState.modal,\n            data\n            // modal: true\n        }));\n    }\n\n    render() {\n        // const { idRol, Bienes  } = this.props;\n        // const { BienesData } = this.state;\n        let columns = levantamientoColumns\n        let rows = [\n            {\n                name: 'Tiger Nixon',\n                position: 'System Architect',\n                office: 'Edinburgh',\n                age: '61',\n                date: '2011/04/25',\n                salary: '$320',\n              },\n              {\n                name: 'Garrett Winters',\n                position: 'Accountant',\n                office: 'Tokyo',\n                age: '63',\n                date: '2011/07/25',\n                salary: '$170',\n              },\n              {\n                name: 'Ashton Cox',\n                position: 'Junior Technical Author',\n                office: 'San Francisco',\n                age: '66',\n                date: '2009/01/12',\n                salary: '$86',\n              },\n              {\n                name: 'Cedric Kelly',\n                position: 'Senior Javascript Developer',\n                office: 'Edinburgh',\n                age: '22',\n                date: '2012/03/29',\n                salary: '$433',\n              },\n              {\n                name: 'Airi Satou',\n                position: 'Accountant',\n                office: 'Tokyo',\n                age: '33',\n                date: '2008/11/28',\n                salary: '$162',\n              },\n              {\n                name: 'Brielle Williamson',\n                position: 'Integration Specialist',\n                office: 'New York',\n                age: '61',\n                date: '2012/12/02',\n                salary: '$372',\n              },\n              {\n                name: 'Herrod Chandler',\n                position: 'Sales Assistant',\n                office: 'San Francisco',\n                age: '59',\n                date: '2012/08/06',\n                salary: '$137',\n              },\n              {\n                name: 'Rhona Davidson',\n                position: 'Integration Specialist',\n                office: 'Tokyo',\n                age: '55',\n                date: '2010/10/14',\n                salary: '$327',\n              },\n              {\n                name: 'Colleen Hurst',\n                position: 'Javascript Developer',\n                office: 'San Francisco',\n                age: '39',\n                date: '2009/09/15',\n                salary: '$205',\n              },\n              {\n                name: 'Sonya Frost',\n                position: 'Software Engineer',\n                office: 'Edinburgh',\n                age: '23',\n                date: '2008/12/13',\n                salary: '$103',\n              }\n        ]\n\n        // if (idRol === 4) {\n        //     columns = columns.slice(0, columns.length - 2)\n        // }   \n\n        // Bienes.forEach(data => {\n        //     if(data.usuario) {\n        //         rows.push({\n        //             placa: data.placa ? data.placa : '-',\n        //             descripcion: data.descripcion ? data.descripcion : '-',\n        //             sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n        //             espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n        //             dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n        //             observaciones: data.observaciones ? data.observaciones : 'Ninguna',\n        //             dar_baja: idRol === 4 ? '' :\n        //                 Number(data.estado.id) === 1 ?\n        //                     <button className=\"btn btn-danger rounded-pill\" onClick={() => this.changeStateBien({ id: Number(data.id), fk_estado: 2 }, idRol, data)}>Dar de baja</button>\n        //                 : Number(data.estado.id) === 2 ? <button className=\"btn btn-success rounded-pill\" onClick={() => this.changeStateBien({ id: Number(data.id), fk_estado: 1 }, idRol, data)}>Dar de alta</button>\n        //                         : <button className=\"btn btn-secondary rounded-pill\" disabled={true}>Pendiente</button>,\n        //             actualizar: idRol === 4 ? '' : <button className=\"btn btn-primary rounded-pill\" onClick={() => this.openModal(data)}>Actualizar</button>\n        //         })\n        //     }\n        // })\n\n        const data = {\n            columns,\n            rows,\n        }\n\n\n        return (\n            <React.Fragment>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Card>\n                                <CardBody>\n                                    {this.state.confirm ?\n                                        <SweetAlert success title=\"\" onConfirm={this.closeAlert()} >\n                                            Actualización correcta\n                                    </SweetAlert> : <p></p>}\n                                    <MDBDataTableV5\n                                        responsive\n                                        bordered\n                                        searching={false}\n                                        fullPagination={true}\n                                        infoLabel={['', '-', 'de', '']}\n                                        data={data}\n                                    />\n                                </CardBody>\n                            </Card>\n                            { this.state.modal ?\n                                <ModalUpdateBien callback={this.updateBien} data={this.state.data}/> : <p></p>\n                            }\n                        </Col>\n                    </Row>\n\n                    \n\n                   \n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default LevantamientoTable;"]},"metadata":{},"sourceType":"module"}